version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4
    working_directory: ~/project
    steps:
      - checkout

      # Load git submodules
      - run:
          name: "Load git submodules"
          command: git submodule sync && git submodule update --init

      # Restore bundle cache (persisted across builds)
      - restore_cache:
          keys:
            - cds-vendor-bundle-{{ checksum "Gemfile.lock" }}

      # Bundle install
      - run:
          name: "Bundle install"
          command: bundle install --path vendor/bundle

      # Store bundle cache (persisted across builds)
      - save_cache:
          key: cds-vendor-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Build compiled sites
      - run:
          name: "Build English and French"
          command: |
            bundle exec jekyll build --config _config_en.yml --destination ~/cds-website
            bundle exec jekyll build --config _config_fr.yml --destination ~/snc-website

      # Store compiled cache (persisted across jobs)
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - save_cache:
          key: cds-website-dist-{{ checksum ".circle-sha" }}
          paths:
            ~/cds-website
            ~/snc-website

  test:
    docker:
      - image: cdssnc/html-proofer
    steps:
      # Restore compiled cache (persisted across jobs)
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - cds-website-dist-{{ checksum ".circle-sha" }}

      - run:
          name: "Test English"
          command: htmlproofer /home/circleci/cds-website --allow-hash-href --empty_alt_ignore --check-favicon --check-html --disable-external --file-ignore=/assets/lib/

      - run:
          name: "Test French"
          command: htmlproofer /home/circleci/snc-website --allow-hash-href --empty_alt_ignore --check-favicon --check-html --disable-external --file-ignore=/assets/lib/

  deploy:
    docker:
      - image: cdssnc/aws-cli
    steps:
      # Configure AWS CLI
      - run:
          name: "Configure AWS Cli"
          command: |
            aws configure set preview.cloudfront true
            aws configure set preview.create-invalidation true

      # Restore compiled cache (persisted across jobs)
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - cds-website-dist-{{ checksum ".circle-sha" }}

      # Deploy english from cache and create Cloudfront object invalidation
      - deploy:
          name: "Deploy English"
          command: |
            aws s3 sync /home/circleci/cds-website s3://cds-website-dist/ --delete
            aws cloudfront create-invalidation --cli-input-json "{\"DistributionId\":\"E3EIUBOL3WTOOO\",\"InvalidationBatch\":{\"Paths\":{\"Quantity\":1,\"Items\":[\"/*\"]},\"CallerReference\":\"$(date +%s)\"}}"

      # Deploy french from cache and create Cloudfront object invalidation
      - deploy:
          name: "Deploy French"
          command: |
            aws s3 sync /home/circleci/snc-website s3://snc-website-dist/ --delete
            aws cloudfront create-invalidation --cli-input-json "{\"DistributionId\":\"E3FI5UW2E5PBD3\",\"InvalidationBatch\":{\"Paths\":{\"Quantity\":1,\"Items\":[\"/*\"]},\"CallerReference\":\"$(date +%s)\"}}"

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
